/* =========================================================== *\
  BASE
\* =========================================================== */
// Set global box-sizing to border-box, this is not an option!
*, *:before, *:after {
  -moz-box-sizing: border-box; 
  -webkit-box-sizing: border-box; 
  box-sizing: border-box;
}




/* =========================================================== *\
  OPTIONS
\* =========================================================== */
$grid-max-width        : 1240px !default; // The grid width, including gutter
// Gutters
$grid-default-gutter   : 10px !default;
// Columns
$grid-column-count     : 12 !default;

// Map of sizes
$grid-sizes: 
  (
    641px,                            // Min-width
    768px,                            // Max-width
    10px,                             // Gutter
    "md"                              // Prefix
  ),
  (
    769px,                            // Min-width
    1024px,                           // Max-width
    20px,                             // Gutter
    "lg"                              // Prefix
  ) !default;





/* =========================================================== *\
  PLACEHOLDERS
\* =========================================================== */
%row {
  margin: 0 auto;
  *zoom: 1;
  max-width: $grid-max-width;
  padding-left: floor($grid-default-gutter / 2);
  padding-right: floor($grid-default-gutter / 2);

  &:before,
  &:after {
    content: " ";
    display: table;
  }

  &:after {
    clear: both;
  }

  @each $size in $grid-sizes {
    $min-width: nth($size, 1);
    $gutter: nth($size, 3);
    @media screen and (min-width: #{$min-width}) {
      padding-left: floor($gutter / 2);
      padding-right: floor($gutter / 2);
    }
  }
}

%col {
  float: left;
  padding-left: floor($grid-default-gutter / 2);
  padding-right: floor($grid-default-gutter / 2);
  display: block;
  width: 100%;
}

%row-reset {
  margin-left: -$grid-default-gutter;
  margin-right: -$grid-default-gutter;
  @each $size in $grid-sizes {
    $min-width: nth($size, 1);
    $gutter: nth($size, 3);
    @media screen and (min-width: #{$min-width}) {
      margin-left: -$gutter;
      margin-right: -$gutter;
    }
  }
}





/* =========================================================== *\
  MIXINS
\* =========================================================== */
@mixin row() {
  @extend %row;
}

@mixin col($span: false) {
  @if not $span {
    width: 100%;
  } @else {
    width: percentage($span / $grid-column-count);
  }
}

@mixin offset($span: false) {
  margin-left: percentage($i / $column-count);
}

@mixin hide-for($prefix: '') {
  // Find settings for size with prefix
  @for $i from 1 through length($grid-sizes) {
    @if $prefix == nth(nth($grid-sizes, $i), 4) {
      $min-width: nth(nth($grid-sizes, $i), 1);
      $max-width: nth(nth($grid-sizes, $i), 2);
      @media screen and (min-width: #{$min-width}) and (max-width: #{$max-width}) {
        display: none !important;
      }
    }
  }
}