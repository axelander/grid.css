/* ===========================================================
  BASE
=========================================================== */
// Set global box-sizing to border-box, this is not an option!
*, *:before, *:after {
  -moz-box-sizing: border-box; 
  -webkit-box-sizing: border-box; 
  box-sizing: border-box;
}


/* ===========================================================
  OPTIONS
=========================================================== */
$grid-max-width   : 1240px !default; // The grid width, including gutter
// Gutters
$default-gutter   : 10px !default;

// Columns
$column-count     : 12 !default;

// Map of sizes
$sizes: 
  (
    641px,                            // Min-width
    768px,                            // Max-width
    m,                                // Prefix
    10px                              // Gutter
  ),
  (
    769px,                            // Min-width
    1024px,                           // Max-width
    l,                                // Prefix
    20px                              // Gutter
  ),
  (
    1025px,                           // Min-width
    false,                            // Max-width
    xl,                               // Prefix
    20px                              // Gutter
  ) !default;


/* ===========================================================
  COMMON
=========================================================== */
.row {
  margin: 0 auto;
  max-width: $grid-max-width;
  *zoom: 1;

  &:before,
  &:after {
    content: " ";
    display: table;
  }

  &:after {
    clear: both;
  }
}

/* ===========================================================
  DEFAULT (Smallest)
=========================================================== */
.row {
  padding-left: floor($default-gutter / 2);
  padding-right: floor($default-gutter / 2);
}

[class*="col-"] {
  float: left;
  padding-left: floor($default-gutter / 2);
  padding-right: floor($default-gutter / 2);
  display: block;
  width: 100%;
}

// Reset nested rows
.row > [class*="col-"] > .row {
  margin-left: -$default-gutter;
  margin-right: -$default-gutter;
}

.row > .row {
  margin-left: -$default-gutter;
  margin-right: -$default-gutter; 
}

// Setup default columns (smallest screens)
@for $i from 1 through $column-count {
  .col-#{$i}-#{$column-count} {
    width: percentage($i / $column-count);
  }

  // Hide for default
  $smallest: nth($sizes, 1);
  @media screen and (max-width: #{nth($smallest, 1) - 1}) {
    .hide {
      display: none;
    }
  }  
}

/* ===========================================================
  SIZES
=========================================================== */
// Create all different sizes
@each $size in $sizes {
  $min-width: nth($size, 1);
  $max-width: nth($size, 2);
  $prefix: nth($size, 3);
  $gutter: nth($size, 4);

  @media screen and (min-width: #{$min-width}) {

    // Rows
    .row {
      padding-left: floor($gutter / 2);
      padding-right: floor($gutter / 2);
    }

    // Reset nested rows
    .row > [class*="col-"] > .row {
      margin-left: -$gutter;
      margin-right: -$gutter;
    }

    .row > .row {
      margin-left: -$default-gutter;
      margin-right: -$default-gutter; 
    }

    [class*="col-"] {
      padding-left: floor($gutter / 2);
      padding-right: floor($gutter / 2);  
    }

    // Columns for size
    @for $i from 1 through $column-count {
      .col-#{$prefix}-#{$i}-#{$column-count} {
        width: percentage($i / $column-count);
      }  
    }
    
    // Hide for size and up
    .hide-for-#{$prefix}-up {
      display: none !important;
    }
  } 
  
  // Hide for specific size
  @if $max-width == false {
    @media screen and (min-width: #{$min-width}) {
      .hide-for-#{$prefix} {
        display: none !important;
      }
    }
  } @else {
    @media screen and (min-width: #{$min-width}) and (max-width: #{$max-width}) {
      .hide-for-#{$prefix} {
        display: none !important;
      }
    }
  }
}
