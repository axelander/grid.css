/* This is the root grid framework. */

/*== BASE ====*/
// Set global box-sizing to border-box, this is not an option!
*, *:before, *:after {
  -moz-box-sizing: border-box; 
  -webkit-box-sizing: border-box; 
  box-sizing: border-box;
}


/*== OPTIONS ====*/
$grid-max-width   : 1240px !default; // The grid width, including gutter
// Gutters
$s-gutter-width   : 20px !default;
$m-gutter-width   : $s-gutter-width !default;
$l-gutter-width   : $m-gutter-width !default;

// Columns
$column-count     : 12 !default;

// Transitions
$transitions      : true !default;

/* ===========================================================
  SIZES
=========================================================== */
$sizes: 
  (
    "screen and (min-width: 640px)",  // Media query
    m,                                // Shorthand
    20px                              // Gutter
  ),
  (
    "screen and (min-width: 768px)",  // Media query
    l,                                // Shorthand
    20px                              // Gutter
  ) !default;



/* ===========================================================
  TRANSITIONS
=========================================================== */
@if($transitions) {
  [class*="col-"] {
    -webkit-transition: all 0.3s linear;
    -moz-transition: all 0.3s linear;
    -o-transition: all 0.3s linear;
    transition: all 0.3s linear;
  }
}

/* ===========================================================
  COMMON
=========================================================== */
.row {
  margin: 0 auto;
  max-width: $grid-max-width;
  clear: both;
}

[class*="col-"] {
  float: left;
  padding-left: floor($s-gutter-width / 2);
  padding-right: floor($s-gutter-width / 2);
  display: block;
}

// Reset nested rows
.row > [class*="col-"] > .row {
  margin-left: ceil(-$s-gutter-width / 2);
  margin-right: ceil(-$s-gutter-width / 2);
}

/* ===========================================================
  SIZES
=========================================================== */
// Setup default columns (smallest screens)
@for $i from 1 through $column-count {
  .col-#{$i}-#{$column-count} {
    width: percentage($i / $column-count);
  }  
}

// Create all different sizes
@each $query, $shorthand, $gutter in $sizes {
  @media #{$query} {
    [class*="col-"] {
      padding-left: floor($gutter / 2);
      padding-right: floor($gutter / 2);  
    }

    // Columns for size
    @for $i from 1 through $column-count {
      .col-#{$shorthand}-#{$i}-#{$column-count} {
        width: percentage($i / $column-count);
      }  
    } 
  } 
}
